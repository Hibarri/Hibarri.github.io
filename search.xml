<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>今天也要笑一笑 ت</title>
      <link href="/2022/10/05/%E4%BB%8A%E5%A4%A9%E4%B9%9F%E8%A6%81%E7%AC%91%E4%B8%80%E7%AC%91/"/>
      <url>/2022/10/05/%E4%BB%8A%E5%A4%A9%E4%B9%9F%E8%A6%81%E7%AC%91%E4%B8%80%E7%AC%91/</url>
      
        <content type="html"><![CDATA[<blockquote><p>每天更一个冷笑话</p><p>让<span style ='color:pink'>yh</span>笑一笑</p></blockquote><p>好吧  可能做不到每天  可能也不好笑</p><p>但我保证 一定很冷！！</p><span id="more"></span><hr><p><strong>2022.10.6</strong></p><p>有一天</p><p>我和yh吵架</p><p>yh非常生气</p><p>气的他夺门而出</p><p>我一看 这哪行啊 我得追回来</p><p>于是我追着他跑了好几条街</p><p>终于把家门给拿回来了</p><p><strong>2022.10.5</strong></p><p>从前有一只小绵羊</p><p>某一天心血来潮去剪了羊毛</p><p>就再也睡不着了</p><p>因为它 失绵啦</p><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
      
      
      
        <tags>
            
            <tag> 心情 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>c++</title>
      <link href="/2022/09/17/c%E8%89%B9/"/>
      <url>/2022/09/17/c%E8%89%B9/</url>
      
        <content type="html"><![CDATA[<p>Learn C++ With Object Oriented</p><p><span style='color: pink'>今天 你面向对象了吗？</span></p><span id="more"></span><p>咱就是说 也想感受感受c++的魔力</p><h2 id="learn-from-scratch"><a href="#learn-from-scratch" class="headerlink" title="learn from scratch"></a>learn from scratch</h2><h3 id="do-while语句"><a href="#do-while语句" class="headerlink" title="do while语句"></a>do while语句</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">do</span></span><br><span class="line">&#123;</span><br><span class="line">   <span class="built_in">statement</span>(s);</span><br><span class="line">    </span><br><span class="line">&#125;<span class="keyword">while</span>( condition );</span><br></pre></td></tr></table></figure><p>在循环尾部检查条件 至少执行一次循环</p><h3 id="switch语句"><a href="#switch语句" class="headerlink" title="switch语句"></a>switch语句</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">switch</span>(a)&#123;</span><br><span class="line"><span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line"><span class="comment">//...</span></span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line"><span class="comment">//...</span></span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">default</span>:</span><br><span class="line"><span class="comment">//...</span></span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>不能直接用于string，可用map将string对应于int型再用switch</p><h3 id="vector容器"><a href="#vector容器" class="headerlink" title="vector容器"></a>vector容器</h3><p>能够存放任意类型的动态数组 线性有序</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;vector&gt;</span></span></span><br><span class="line"></span><br><span class="line">vector&lt;elem_type&gt; obj; <span class="comment">//创建一个向量存储容器 元素类型为elem_type</span></span><br><span class="line">obj.<span class="built_in">size</span>()  <span class="comment">//返回容器中元素个数</span></span><br><span class="line">obj.<span class="built_in">empty</span>() <span class="comment">//判断是否为空 返回bool值</span></span><br><span class="line">obj.<span class="built_in">push_back</span>(elem) <span class="comment">//在数组最后添加数据 </span></span><br><span class="line">obj.<span class="built_in">pop_back</span>() <span class="comment">//弹出数组最后一个元素</span></span><br><span class="line">obj.<span class="built_in">clear</span>() <span class="comment">//清零</span></span><br><span class="line">obj.<span class="built_in">insert</span>(obj.<span class="built_in">begin</span>(), x) <span class="comment">//在开头插入元素x</span></span><br></pre></td></tr></table></figure><h3 id="stack"><a href="#stack" class="headerlink" title="stack"></a>stack</h3><p>栈 先进后出</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stack&gt;</span></span></span><br><span class="line"></span><br><span class="line">stack&lt;<span class="type">int</span>&gt; s;</span><br><span class="line"><span class="type">int</span> x;</span><br><span class="line">s.<span class="built_in">push</span>(x); <span class="comment">//入栈</span></span><br><span class="line">s.<span class="built_in">top</span>(); <span class="comment">//返回栈顶元素</span></span><br><span class="line">s.<span class="built_in">pop</span>(); <span class="comment">//删除栈顶元素 并不返回该元素</span></span><br><span class="line">s.<span class="built_in">size</span>(); <span class="comment">//返回栈中元素个数</span></span><br><span class="line">s.<span class="built_in">empty</span>(); <span class="comment">//判断栈是否为空 返回bool值</span></span><br></pre></td></tr></table></figure><h3 id="unordered-map"><a href="#unordered-map" class="headerlink" title="unordered_map"></a>unordered_map</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;unordered_map&gt;</span></span></span><br><span class="line"></span><br><span class="line">unordered_map&lt;<span class="type">char</span>, <span class="type">int</span>&gt; myMap; <span class="comment">// &lt;key, value&gt;</span></span><br><span class="line"><span class="comment">//插入元素</span></span><br><span class="line">myMap[<span class="string">&#x27;a&#x27;</span>] = <span class="number">1</span>;<span class="comment">//已存在则修改 不存在则插入</span></span><br><span class="line">myMap.<span class="built_in">insert</span>( &#123; &#123;<span class="string">&#x27;b&#x27;</span>, <span class="number">2</span>&#125;,</span><br><span class="line">                &#123;<span class="string">&#x27;c&#x27;</span>, <span class="number">3</span>&#125; &#125; );</span><br><span class="line"><span class="comment">//修改元素</span></span><br><span class="line">myMap[<span class="string">&#x27;a&#x27;</span>] = <span class="number">0</span>;</span><br><span class="line"><span class="comment">//删除元素</span></span><br><span class="line">myMap.<span class="built_in">erase</span>(<span class="string">&#x27;a&#x27;</span>); <span class="comment">//删除key为a的元素</span></span><br><span class="line">myMap.<span class="built_in">erase</span>(myMap.<span class="built_in">begin</span>()); <span class="comment">//删除第一个元素</span></span><br><span class="line"><span class="comment">//查询指定key的元素的个数 在unordered_map中非0即1</span></span><br><span class="line">map.<span class="built_in">count</span>(<span class="string">&#x27;a&#x27;</span>)</span><br><span class="line"></span><br><span class="line">myMap.<span class="built_in">clear</span>();<span class="comment">//清空</span></span><br><span class="line">myMap.<span class="built_in">empty</span>();<span class="comment">//判空</span></span><br><span class="line">myMap.<span class="built_in">size</span>();<span class="comment">//查询键值对数量</span></span><br></pre></td></tr></table></figure><h2 id="排序算法"><a href="#排序算法" class="headerlink" title="排序算法"></a>排序算法</h2><h3 id="快速选择排序"><a href="#快速选择排序" class="headerlink" title="快速选择排序"></a>快速选择排序</h3><p>任取待排序元素序列中的某元素作为基准值，按照该排序码将待排序集合分割成两子序列，左子序列中所有元素均小于基准值，右子序列中所有元素均大于基准值，然后最左右子序列重复该过程，直到所有元素都排列在相应位置上为止 。</p><div class='spoiler collapsed'>    <div class='spoiler-title'>        code    </div>    <div class='spoiler-content'>        <figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">100010</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line"><span class="type">int</span> q[N];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">quick_sort</span><span class="params">(<span class="type">int</span> q[], <span class="type">int</span> l, <span class="type">int</span> r)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(l &gt;= r)</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="type">int</span> i=l<span class="number">-1</span>, j=r+<span class="number">1</span>;   </span><br><span class="line">    <span class="type">int</span> x = q[(l+r)/<span class="number">2</span>];</span><br><span class="line">    <span class="keyword">while</span>(i &lt; j)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">do</span> i++; <span class="keyword">while</span>(q[i] &lt; x); <span class="comment">//先++</span></span><br><span class="line">        <span class="keyword">do</span> j--; <span class="keyword">while</span>(q[j] &gt; x);</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span>(i &lt; j) <span class="built_in">swap</span>(q[i], q[j]);</span><br><span class="line">        </span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">quick_sort</span>(q, l, j);</span><br><span class="line">    <span class="built_in">quick_sort</span>(q, j+<span class="number">1</span>, r);</span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">   <span class="built_in">scanf</span>(<span class="string">&quot;%d &quot;</span>, &amp;n);</span><br><span class="line">   </span><br><span class="line">   <span class="keyword">for</span>(<span class="type">int</span> i; i &lt; n; i ++)</span><br><span class="line">       <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;q[i]);</span><br><span class="line">   </span><br><span class="line">   <span class="built_in">quick_sort</span>(q, <span class="number">0</span>, n<span class="number">-1</span>);</span><br><span class="line">   </span><br><span class="line">   <span class="keyword">for</span>(<span class="type">int</span> i; i &lt; n; i ++)</span><br><span class="line">       <span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>, q[i]);</span><br><span class="line">   </span><br><span class="line">   <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>    </div></div><h3 id="归并排序"><a href="#归并排序" class="headerlink" title="归并排序"></a>归并排序</h3><p>将两个有序数组合并</p><ol><li>确定分界点 mid = (l + r) / 2</li><li>递归排序左右部分</li><li>合并</li></ol><div class='spoiler collapsed'>    <div class='spoiler-title'>        code    </div>    <div class='spoiler-content'>        <figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">100010</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> q[N], t[N];</span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">merge_sort</span><span class="params">(<span class="type">int</span> q[], <span class="type">int</span> l, <span class="type">int</span> r)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(l &gt;= r) </span><br><span class="line">        <span class="keyword">return</span> ;</span><br><span class="line">    </span><br><span class="line">    <span class="type">int</span> mid = l + r &gt;&gt; <span class="number">1</span>; <span class="comment">//右移</span></span><br><span class="line">    <span class="built_in">merge_sort</span>(q, l, mid);</span><br><span class="line">    <span class="built_in">merge_sort</span>(q, mid + <span class="number">1</span>, r);</span><br><span class="line">    </span><br><span class="line">    <span class="type">int</span> i = l, j = mid + <span class="number">1</span>, k = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(i &lt;= mid &amp;&amp; j &lt;= r)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(q[i] &lt;= q[j]) </span><br><span class="line">            t[k++] = q[i++];</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            t[k++] = q[j++];</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">while</span>(i &lt;= mid) t[k++] = q[i++];</span><br><span class="line">    <span class="keyword">while</span>(j &lt;= r) t[k++] = q[j++];</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span>(i = l, k = <span class="number">0</span>; i &lt;= r; i ++, k ++)</span><br><span class="line">        q[i] = t[k];</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> ;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i ++)</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;q[i]);</span><br><span class="line"></span><br><span class="line">    </span><br><span class="line">    <span class="built_in">merge_sort</span>(q, <span class="number">0</span>, n<span class="number">-1</span>);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>, q[i]);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>    </div></div><h2 id="整数二分法"><a href="#整数二分法" class="headerlink" title="整数二分法"></a>整数二分法</h2><div class='spoiler collapsed'>    <div class='spoiler-title'>        code    </div>    <div class='spoiler-content'>        <figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 区间[l, r]被划分成[l, mid]和[mid+1, r]时使用：</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">bsearch_1</span><span class="params">(<span class="type">int</span> l, <span class="type">int</span> r)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">while</span>(l&lt;r)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> mid=l+r&gt;&gt;<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">if</span>(<span class="built_in">check</span>(mid)) r = mid;   <span class="comment">//check()判断mid是否满足性质</span></span><br><span class="line">        <span class="keyword">else</span> l = mid + <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> l;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//区间[l, r]被划分成[l, mid-1]和[mid, r]时使用：</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">bsearch_2</span><span class="params">(<span class="type">int</span> l,<span class="type">int</span> r)</span></span>&#123;</span><br><span class="line">    <span class="keyword">while</span>(l&lt;r)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> mid = l+r+<span class="number">1</span>&gt;&gt;<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">if</span>(<span class="built_in">check</span>(mid)) l = mid;</span><br><span class="line">        <span class="keyword">else</span> r = mid - <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>    </div></div><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
      
      
      
        <tags>
            
            <tag> c++ </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo test</title>
      <link href="/2022/08/05/hexo-test/"/>
      <url>/2022/08/05/hexo-test/</url>
      
        <content type="html"><![CDATA[<blockquote><p>这是一个引用</p><p>本文为从魏佬那儿引用来的梁佬的testpost</p></blockquote><span id="more"></span><hr><h1 id="hexo博客支持性测试"><a href="#hexo博客支持性测试" class="headerlink" title="hexo博客支持性测试"></a>hexo博客支持性测试</h1><h2 id="文字测试"><a href="#文字测试" class="headerlink" title="文字测试"></a>文字测试</h2><p><em>斜体</em>，<strong>粗体</strong>，<strong><em>粗斜体</em></strong>，<del>删除线</del>，<a href="">超链接</a></p><p>嵌入代码：<code>MessageBoxW(hWnd, L&quot;Hello world!&quot;, L&quot;Tips&quot;, MB_ICONASTERISK)</code></p><p>标签：<span class="label success">成功</span> <span class="label warning">警告</span> <span class="label danger">危险</span> <span class="label primary">重要</span> <span class="label info">信息</span> <span class="label default">默认</span></p><blockquote class="blockquote-center">            <i class="fa fa-quote-left"></i>            <p>居中引用</p>            <i class="fa fa-quote-right"></i>          </blockquote><div class="note info">            <p><strong>提示</strong></p><p><code>MessageBoxW</code>用于显示一个对话框</p>          </div><h2 id="代码-公式测试"><a href="#代码-公式测试" class="headerlink" title="代码/公式测试"></a>代码/公式测试</h2><h3 id="c-代码"><a href="#c-代码" class="headerlink" title="c++代码"></a>c++代码</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">(<span class="type">int</span> argc, <span class="type">char</span> **argv)</span></span>&#123;</span><br><span class="line">    std::cout &lt;&lt; <span class="string">&quot;Hello World!&quot;</span> &lt;&lt; std::endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="折叠的Lua代码"><a href="#折叠的Lua代码" class="headerlink" title="折叠的Lua代码"></a>折叠的Lua代码</h3><div class='spoiler collapsed'>    <div class='spoiler-title'>        code    </div>    <div class='spoiler-content'>        <figure class="highlight lua"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Hello = <span class="literal">true</span></span><br><span class="line"><span class="keyword">for</span> k, _ <span class="keyword">in</span> <span class="built_in">_G</span> <span class="keyword">do</span></span><br><span class="line">    <span class="built_in">print</span>(k)</span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure>    </div></div><h3 id="LaTeX公式："><a href="#LaTeX公式：" class="headerlink" title="LaTeX公式："></a>LaTeX公式：</h3><script type="math/tex; mode=display">x=\frac{-b\pm\sqrt{b^2-4ac}}{2a}</script><script type="math/tex; mode=display">A = \begin{bmatrix}    a_{11} & a_{12} & ...    & a_{1n} \\\\    a_{21} & a_{22} & ...    & a_{2n} \\\\     a_{31} & a_{22} & ...    & a_{3n} \\\\    \vdots & \vdots & \ddots & \vdots \\\\    a_{n1} & a_{n2} & ...    & a_{nn} \\\\ \end{bmatrix} , b = \begin{bmatrix}  b_{1}  \\\\  b_{2}  \\\\  b_{3}  \\\\  \vdots \\\\  b_{n}  \\\\\end{bmatrix}</script><p>行内公式：$ \int_{0}^{\pi}{\sin x \mathrm{d} x} = 2 $</p><p>$a \times b$</p><h2 id="组件测试"><a href="#组件测试" class="headerlink" title="组件测试"></a>组件测试</h2><h3 id="表格"><a href="#表格" class="headerlink" title="表格"></a>表格</h3><p>一些 <code>Hello World</code></p><div class="table-container"><table><thead><tr><th>语言</th><th></th></tr></thead><tbody><tr><td>C</td><td><code>puts(&quot;Hello World!&quot;);</code></td></tr><tr><td>C++</td><td><code>std::cout &lt;&lt; &quot;Hello World!&quot;&lt;&lt; std::endl;</code></td></tr><tr><td>Python</td><td><code>print(&quot;Hello World!&quot;)</code></td></tr><tr><td>Go</td><td><code>fmt.Println(&quot;Hello World!&quot;)</code></td></tr><tr><td>BatchScript</td><td><code>echo Hello World!</code></td></tr><tr><td><del>brainfuck</del></td><td><code>++++++++++[&gt;+++++++&gt;++++++++++&gt;+++&gt;+&lt;&lt;&lt;&lt;-]&gt;++.&gt;+.+++++++..+++.&gt;++.&lt;&lt;+++++++++++++++.&gt;.+++.------.--------.&gt;+.&gt;.</code></td></tr></tbody></table></div><h3 id="选项卡"><a href="#选项卡" class="headerlink" title="选项卡"></a>选项卡</h3><div class="tabs" id="解决方案"><ul class="nav-tabs"><li class="tab active"><a href="#解决方案-1">解决方案 1</a></li><li class="tab"><a href="#解决方案-2">解决方案 2</a></li><li class="tab"><a href="#解决方案-3">解决方案 3</a></li></ul><div class="tab-content"><div class="tab-pane active" id="解决方案-1"><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* Code for solution #1 */</span></span><br></pre></td></tr></table></figure></div><div class="tab-pane" id="解决方案-2"><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* Code for solution #2 */</span></span><br></pre></td></tr></table></figure></div><div class="tab-pane" id="解决方案-3"><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* Code for solution #3 */</span></span><br></pre></td></tr></table></figure></div></div></div><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
      
      
      
        <tags>
            
            <tag> hexo test </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2022/08/04/hello-world/"/>
      <url>/2022/08/04/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><span id="more"></span><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
